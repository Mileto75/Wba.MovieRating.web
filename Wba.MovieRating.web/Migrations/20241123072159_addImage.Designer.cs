// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wba.MovieRating.Web.Data;

#nullable disable

namespace Wba.MovieRating.Web.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20241123072159_addImage")]
    partial class addImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.Property<int>("DirectorsId")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("DirectorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("DirectorMovie");

                    b.HasData(
                        new
                        {
                            DirectorsId = 1,
                            MoviesId = 1
                        },
                        new
                        {
                            DirectorsId = 2,
                            MoviesId = 2
                        },
                        new
                        {
                            DirectorsId = 1,
                            MoviesId = 3
                        },
                        new
                        {
                            DirectorsId = 2,
                            MoviesId = 4
                        });
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4393),
                            Firstname = "Al",
                            Lastname = "Pacino"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4395),
                            Firstname = "Robert",
                            Lastname = "De Niro"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4397),
                            Firstname = "Kate",
                            Lastname = "Winslet"
                        });
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4334),
                            Name = "Miramax"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4382),
                            Name = "Weinstein"
                        });
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4386),
                            Firstname = "Bob",
                            Lastname = "Saget"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4388),
                            Firstname = "Walter",
                            Lastname = "Capiau"
                        });
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4413),
                            ReleaseDate = new DateTime(2018, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Deadpool"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4503),
                            ReleaseDate = new DateTime(2018, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Suicide squad"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4510),
                            ReleaseDate = new DateTime(2020, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Venom"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4515),
                            ReleaseDate = new DateTime(1999, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Titanic"
                        });
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.MovieActor", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Character")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ActorId", "MovieId", "Character");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieActors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            MovieId = 1,
                            Character = "Deadpool"
                        },
                        new
                        {
                            ActorId = 1,
                            MovieId = 2,
                            Character = "The weasel"
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 3,
                            Character = "Venom"
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 4,
                            Character = "Die snelle"
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 1,
                            Character = "Colossus"
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 2,
                            Character = "TDK"
                        },
                        new
                        {
                            ActorId = 1,
                            MovieId = 3,
                            Character = "The cop"
                        },
                        new
                        {
                            ActorId = 1,
                            MovieId = 4,
                            Character = "Dien blonten"
                        });
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4530),
                            MovieId = 1,
                            Review = "Great movie!",
                            Score = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4533),
                            MovieId = 2,
                            Review = "Top!!",
                            Score = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4535),
                            MovieId = 3,
                            Review = "Suckt ongelooflijk!",
                            Score = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4537),
                            MovieId = 4,
                            Review = "Machtig!!",
                            Score = 2,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4400),
                            Firstname = "Bart",
                            Lastname = "Soete"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4402),
                            Firstname = "Tibo",
                            Lastname = "Van Craenenbroeck"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 11, 23, 8, 21, 58, 725, DateTimeKind.Local).AddTicks(4404),
                            Firstname = "Tine",
                            Lastname = "Baelde"
                        });
                });

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.HasOne("Wba.MovieRating.Core.Entities.Director", null)
                        .WithMany()
                        .HasForeignKey("DirectorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wba.MovieRating.Core.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Movie", b =>
                {
                    b.HasOne("Wba.MovieRating.Core.Entities.Company", "Company")
                        .WithMany("Movies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.MovieActor", b =>
                {
                    b.HasOne("Wba.MovieRating.Core.Entities.Actor", "Actor")
                        .WithMany("Movies")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wba.MovieRating.Core.Entities.Movie", "Movie")
                        .WithMany("Actors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Rating", b =>
                {
                    b.HasOne("Wba.MovieRating.Core.Entities.Movie", "Movie")
                        .WithMany("Ratings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wba.MovieRating.Core.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Actor", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Company", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.Movie", b =>
                {
                    b.Navigation("Actors");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("Wba.MovieRating.Core.Entities.User", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
